cmake_minimum_required(VERSION 2.8.11)
set(TARGET_NAME MyProject)
set(ProjectName MySolution)
PROJECT(${ProjectName})

SET(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "add a postfix, usually d on windows")
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)

set(CMAKE_MODULE_PATH "${CMAKE_ROOT}/CMakeModules")
find_package(opengl REQUIRED)
find_package(glaux REQUIRED)
find_package(glut REQUIRED)

INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${GLAUX_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${GLUT_INCLUDE_DIR})



FILE(GLOB Target_INCLUDE_LIST "${PROJECT_SOURCE_DIR}/*.h" )
FILE(GLOB Target_INCLUDE_LIST_2 "${PROJECT_SOURCE_DIR}/include/*.h" )
FILE(GLOB Target_SRC_LIST "${PROJECT_SOURCE_DIR}/*.cpp")
FILE(GLOB Target_SRC_LIST_2 "${PROJECT_SOURCE_DIR}/src/*.cpp")
source_group("include" FILES ${Target_INCLUDE_LIST} ${Target_INCLUDE_LIST_2} )
source_group("src" FILES ${Target_SRC_LIST} ${Target_SRC_LIST_2})
ADD_EXECUTABLE(${TARGET_NAME}  ${Target_INCLUDE_LIST} ${Target_INCLUDE_LIST_2} ${Target_SRC_LIST} ${Target_SRC_LIST_2} )

set_target_properties(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_BINARY_DIR}/bin")	
set_target_properties(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_BINARY_DIR}/bin")
set_target_properties(${TARGET_NAME} PROPERTIES DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}") 
set_target_properties(${TARGET_NAME} PROPERTIES RELEASE_POSTFIX "${CMAKE_RELEASE_POSTFIX}") 


SET(ADDITIONAL_LIBRARIES_DEBUG 				
${OPENGL_LIBRARY}
${GLUT_LIBRARY}
${GLAUX_LIBRARY}
)
SET(ADDITIONAL_LIBRARIES_RELEASE 				
${OPENGL_LIBRARY}
${GLUT_LIBRARY}
${GLAUX_LIBRARY}
)
TARGET_LINK_LIBRARIES(${TARGET_NAME} debug "${ADDITIONAL_LIBRARIES_DEBUG}" optimized "${ADDITIONAL_LIBRARIES_RELEASE}")


